How did viewing a diff between two versions of a file help you see the bug that was introduced? it helped me see the bug very quickly instead of manualy looking for it
How could having easy access to the entire history of a file make you a more efficient programmer in the long term? as you collaborate with coworkers and everyone makes a change or an update, as a manager, you would want to review or finalize the changes that have been done before a code goes for production for example. In addition, if there is a bug in the new code, for example, looking at the previous versions would make it easier to fix the problem.
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does? pros: have less versions of the same file, easier to compare the latest with the previous previous versions; cons: human error - humans may forget to same files.
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately? Git allows saving multiple files in commit since all files will be saved in one repository. However, Google docs treats each file separately and saves each files using one file. 
How can you use the commands git log and git diff to view the history of files? git log helps you see all the commits you've done and git diff helps you to easily identify (the additions and deletions) the files
How might using version control make you more confident to make changes that could break something? version control helps you restore all your files to how they  were before you committed again one more time. In case a bug gets introduced on the new commit file, but was not there before, it helps you explore signicant changes to make it work it again.
Now that you have your workspace set up, what do you want to try using Git for? I would like to try how to collaborate with others using Git and Github.